import os
import json

def check_existing_configs(config_counter: int, cfg: dict, results_folder: str) -> bool:
    """
    Check if the current configuration already exists.

    config_counter: How many configurations have already been tested.
    
    cfg: Configuration dictionary generated by OpenTuner.
    
    results_folder: Folder where the configuration results have been stored.
    
    returns: True if the config has already been tested, False otherwise.
    """
    # Create a hash of the current configuration to check for existence
    current_config_hash = hash(json.dumps(cfg, sort_keys=True))

    for i in range(config_counter):
        config_file_path = os.path.join(results_folder, f'config_{i}', 'config.json')
        
        if os.path.exists(config_file_path):
            # Load existing config file
            with open(config_file_path, 'r') as config_file:
                existing_cfg = json.load(config_file)

            # Create a hash of the existing configuration
            existing_config_hash = hash(json.dumps(existing_cfg, sort_keys=True))
            
            # If the hashes match, the configurations are the same
            if current_config_hash == existing_config_hash:
                print('Current config has been tested. Skipping...')
                return True

    print('Current config has not been tested. Continuing...')
    return False
